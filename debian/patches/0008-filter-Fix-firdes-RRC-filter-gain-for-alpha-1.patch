From a263ad80b1da0b4cd5121c2c48e0fd8a17b77b41 Mon Sep 17 00:00:00 2001
From: Brett Gottula <brett@astranis.com>
Date: Tue, 21 Apr 2020 15:39:52 -0700
Subject: [PATCH 08/32] filter: Fix firdes RRC filter gain for alpha == 1

* Fix gain of firdes.root_raised_cosine() when alpha is set to 1.0. Was
  2x the expected gain for alpha==1.0 previously.
* Adds corresponding unit test.
---
 gr-filter/lib/firdes.cc              | 1 +
 gr-filter/python/filter/qa_firdes.py | 7 +++++++
 2 files changed, 8 insertions(+)

diff --git a/gr-filter/lib/firdes.cc b/gr-filter/lib/firdes.cc
index 99d82e125d..f5cb4e7dd9 100644
--- a/gr-filter/lib/firdes.cc
+++ b/gr-filter/lib/firdes.cc
@@ -583,6 +583,7 @@ vector<float> firdes::root_raised_cosine(
         } else {
             if (alpha == 1) {
                 taps[i] = -1;
+                scale += taps[i];
                 continue;
             }
             x3 = (1 - alpha) * x1;
diff --git a/gr-filter/python/filter/qa_firdes.py b/gr-filter/python/filter/qa_firdes.py
index 21521c4637..3fd1956523 100644
--- a/gr-filter/python/filter/qa_firdes.py
+++ b/gr-filter/python/filter/qa_firdes.py
@@ -175,6 +175,13 @@ class test_firdes(gr_unittest.TestCase):
         new_taps = filter.firdes.root_raised_cosine(1, 4, 1, 0.35, 11)
         self.assertFloatTuplesAlmostEqual(known_taps, new_taps, 5)
 
+    def test_root_raised_cosine_gain(self):
+        """Confirm DC gain is as expected"""
+        taps = filter.firdes.root_raised_cosine(1, 4, 1, 0.35, 11)
+        self.assertAlmostEqual(sum(taps), 1.0)
+        taps = filter.firdes.root_raised_cosine(1, 4, 1, 1.0, 11)
+        self.assertAlmostEqual(sum(taps), 1.0)
+
     def test_gaussian(self):
         known_taps = (0.0003600157215259969, 0.0031858310103416443,
                       0.0182281993329525, 0.06743486225605011,
-- 
2.20.1

