From b2eebdf34058a5c9e3f5d1b81703bcba749f28cb Mon Sep 17 00:00:00 2001
From: Jacob Gilbert <mrjacobagilbert@gmail.com>
Date: Tue, 12 May 2020 11:42:26 -0600
Subject: [PATCH 16/32] grc: dynamically update namespaces from blocks

amongst other things, allows assert statements to use items within namespaces the blocks import
---
 grc/core/blocks/block.py | 17 ++++++++++++++++-
 1 file changed, 16 insertions(+), 1 deletion(-)

diff --git a/grc/core/blocks/block.py b/grc/core/blocks/block.py
index a2d3467e8b..a3c724c3fb 100644
--- a/grc/core/blocks/block.py
+++ b/grc/core/blocks/block.py
@@ -138,6 +138,19 @@ class Block(Element):
         self.active_sources = [p for p in self.sources if not p.hidden]
         self.active_sinks = [p for p in self.sinks if not p.hidden]
 
+        # namespaces may have changed, update them
+        self.block_namespace = {}
+        try:
+            exec(self.templates.render('imports'), self.block_namespace)
+        except ImportError:
+            # We do not have a good way right now to determine if an import is for a
+            # hier block, these imports will fail as they are not in the search path
+            # this is ok behavior, unfortunately we could be hiding other import bugs
+            pass
+        except Exception:
+            log.exception('Failed to evaluate import expression "{0}"'.format(expr), exc_info=True)
+            pass
+
     def update_bus_logic(self):
         ###############################
         ## Bus Logic
@@ -537,7 +550,9 @@ class Block(Element):
     ##############################################
     @property
     def namespace(self):
-        return {key: param.get_evaluated() for key, param in six.iteritems(self.params)}
+        # update block namespace
+        self.block_namespace.update({key:param.get_evaluated() for key, param in six.iteritems(self.params)})
+        return self.block_namespace
 
     @property
     def namespace_templates(self):
-- 
2.20.1

